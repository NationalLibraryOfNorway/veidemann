name: Build and publish container image

on:
  workflow_call:
    inputs:
      PATH:
        required: true
        type: string
        description: "The path to the component to build"
    secrets:
      VAULT_URL:
        required: true
      VAULT_SECRET_PATH:
        required: true
      VAULT_ROLE_ID:
        required: true
      VAULT_SECRET_ID:
        required: true
      HTTPS_PROXY:
        required: false
      HTTP_PROXY:
        required: false
      NO_PROXY:
        required: false

jobs:
  scoped-build:
    runs-on: self-hosted-linux
    steps:

    - name: Checkout code
      uses: actions/checkout@v5

    - name: Log in to the container registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract scoped tag
      if: startsWith(github.ref, format('refs/tags/{0}/', inputs.PATH))
      run: |
        TAG=${GITHUB_REF#refs/tags/${{ inputs.PATH }}/}
        echo "TAG=$TAG" >> $GITHUB_ENV

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}/${{ inputs.PATH }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          ${{ env.TAG != '' && !startsWith(env.TAG, 'v') && 'type=ref,event=tag' || '' }}
          ${{ env.TAG != '' && startsWith(env.TAG, 'v') && format('type=semver,pattern={{version}},value={0}', env.TAG) || '' }}
  
    - name: Build and push container image
      uses: docker/build-push-action@v6
      with:
        push: true
        context: ${{ inputs.PATH }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          HTTPS_PROXY=${{ secrets.HTTPS_PROXY }}
          HTTP_PROXY=${{ secrets.HTTP_PROXY }}
          NO_PROXY=${{ secrets.NO_PROXY }}
          http_proxy=${{ secrets.HTTP_PROXY }}
          https_proxy=${{ secrets.HTTPS_PROXY }}
          no_proxy=${{ secrets.NO_PROXY }}
          VERSION=${{ steps.meta.outputs.version }}
