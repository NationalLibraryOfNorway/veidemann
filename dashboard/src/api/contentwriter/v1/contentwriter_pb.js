// source: contentwriter/v1/contentwriter.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var config_v1_resources_pb = require('../../config/v1/resources_pb.js');
goog.object.extend(proto, config_v1_resources_pb);
var contentwriter_v1_resources_pb = require('../../contentwriter/v1/resources_pb.js');
goog.object.extend(proto, contentwriter_v1_resources_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.veidemann.api.contentwriter.v1.Data', null, global);
goog.exportSymbol('proto.veidemann.api.contentwriter.v1.WriteReply', null, global);
goog.exportSymbol('proto.veidemann.api.contentwriter.v1.WriteRequest', null, global);
goog.exportSymbol('proto.veidemann.api.contentwriter.v1.WriteRequest.ValueCase', null, global);
goog.exportSymbol('proto.veidemann.api.contentwriter.v1.WriteRequestMeta', null, global);
goog.exportSymbol('proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta', null, global);
goog.exportSymbol('proto.veidemann.api.contentwriter.v1.WriteResponseMeta', null, global);
goog.exportSymbol('proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.contentwriter.v1.Data = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.veidemann.api.contentwriter.v1.Data, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.contentwriter.v1.Data.displayName = 'proto.veidemann.api.contentwriter.v1.Data';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.contentwriter.v1.WriteRequestMeta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.veidemann.api.contentwriter.v1.WriteRequestMeta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.contentwriter.v1.WriteRequestMeta.displayName = 'proto.veidemann.api.contentwriter.v1.WriteRequestMeta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta.repeatedFields_, null);
};
goog.inherits(proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta.displayName = 'proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.contentwriter.v1.WriteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.veidemann.api.contentwriter.v1.WriteRequest.oneofGroups_);
};
goog.inherits(proto.veidemann.api.contentwriter.v1.WriteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.contentwriter.v1.WriteRequest.displayName = 'proto.veidemann.api.contentwriter.v1.WriteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.contentwriter.v1.WriteResponseMeta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.veidemann.api.contentwriter.v1.WriteResponseMeta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.contentwriter.v1.WriteResponseMeta.displayName = 'proto.veidemann.api.contentwriter.v1.WriteResponseMeta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta.displayName = 'proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.contentwriter.v1.WriteReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.veidemann.api.contentwriter.v1.WriteReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.contentwriter.v1.WriteReply.displayName = 'proto.veidemann.api.contentwriter.v1.WriteReply';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.contentwriter.v1.Data.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.contentwriter.v1.Data.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.contentwriter.v1.Data} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.contentwriter.v1.Data.toObject = function(includeInstance, msg) {
  var f, obj = {
recordNum: jspb.Message.getFieldWithDefault(msg, 1, 0),
data: msg.getData_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.contentwriter.v1.Data}
 */
proto.veidemann.api.contentwriter.v1.Data.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.contentwriter.v1.Data;
  return proto.veidemann.api.contentwriter.v1.Data.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.contentwriter.v1.Data} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.contentwriter.v1.Data}
 */
proto.veidemann.api.contentwriter.v1.Data.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRecordNum(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.contentwriter.v1.Data.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.contentwriter.v1.Data.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.contentwriter.v1.Data} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.contentwriter.v1.Data.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecordNum();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional int32 record_num = 1;
 * @return {number}
 */
proto.veidemann.api.contentwriter.v1.Data.prototype.getRecordNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.veidemann.api.contentwriter.v1.Data} returns this
 */
proto.veidemann.api.contentwriter.v1.Data.prototype.setRecordNum = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bytes data = 2;
 * @return {string}
 */
proto.veidemann.api.contentwriter.v1.Data.prototype.getData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes data = 2;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.veidemann.api.contentwriter.v1.Data.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.veidemann.api.contentwriter.v1.Data.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.veidemann.api.contentwriter.v1.Data} returns this
 */
proto.veidemann.api.contentwriter.v1.Data.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.contentwriter.v1.WriteRequestMeta.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.contentwriter.v1.WriteRequestMeta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.contentwriter.v1.WriteRequestMeta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.contentwriter.v1.WriteRequestMeta.toObject = function(includeInstance, msg) {
  var f, obj = {
executionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
targetUri: jspb.Message.getFieldWithDefault(msg, 2, ""),
recordMetaMap: (f = msg.getRecordMetaMap()) ? f.toObject(includeInstance, proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta.toObject) : [],
fetchTimeStamp: (f = msg.getFetchTimeStamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
ipAddress: jspb.Message.getFieldWithDefault(msg, 5, ""),
collectionRef: (f = msg.getCollectionRef()) && config_v1_resources_pb.ConfigRef.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.contentwriter.v1.WriteRequestMeta}
 */
proto.veidemann.api.contentwriter.v1.WriteRequestMeta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.contentwriter.v1.WriteRequestMeta;
  return proto.veidemann.api.contentwriter.v1.WriteRequestMeta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.contentwriter.v1.WriteRequestMeta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.contentwriter.v1.WriteRequestMeta}
 */
proto.veidemann.api.contentwriter.v1.WriteRequestMeta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setExecutionId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTargetUri(value);
      break;
    case 3:
      var value = msg.getRecordMetaMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readMessage, proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta.deserializeBinaryFromReader, 0, new proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta());
         });
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setFetchTimeStamp(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setIpAddress(value);
      break;
    case 7:
      var value = new config_v1_resources_pb.ConfigRef;
      reader.readMessage(value,config_v1_resources_pb.ConfigRef.deserializeBinaryFromReader);
      msg.setCollectionRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.contentwriter.v1.WriteRequestMeta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.contentwriter.v1.WriteRequestMeta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.contentwriter.v1.WriteRequestMeta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.contentwriter.v1.WriteRequestMeta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExecutionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTargetUri();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRecordMetaMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeMessage, proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta.serializeBinaryToWriter);
  }
  f = message.getFetchTimeStamp();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getIpAddress();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCollectionRef();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      config_v1_resources_pb.ConfigRef.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta.toObject = function(includeInstance, msg) {
  var f, obj = {
recordNum: jspb.Message.getFieldWithDefault(msg, 1, 0),
type: jspb.Message.getFieldWithDefault(msg, 2, 0),
recordContentType: jspb.Message.getFieldWithDefault(msg, 3, ""),
blockDigest: jspb.Message.getFieldWithDefault(msg, 4, ""),
payloadDigest: jspb.Message.getFieldWithDefault(msg, 5, ""),
size: jspb.Message.getFieldWithDefault(msg, 6, 0),
subCollection: jspb.Message.getFieldWithDefault(msg, 7, 0),
warcConcurrentToList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta}
 */
proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta;
  return proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta}
 */
proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRecordNum(value);
      break;
    case 2:
      var value = /** @type {!proto.veidemann.api.contentwriter.v1.RecordType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecordContentType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBlockDigest(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayloadDigest(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSize(value);
      break;
    case 7:
      var value = /** @type {!proto.veidemann.api.config.v1.Collection.SubCollectionType} */ (reader.readEnum());
      msg.setSubCollection(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addWarcConcurrentTo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecordNum();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getRecordContentType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBlockDigest();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPayloadDigest();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getSubCollection();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getWarcConcurrentToList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
};


/**
 * optional int32 record_num = 1;
 * @return {number}
 */
proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta.prototype.getRecordNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta} returns this
 */
proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta.prototype.setRecordNum = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional RecordType type = 2;
 * @return {!proto.veidemann.api.contentwriter.v1.RecordType}
 */
proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta.prototype.getType = function() {
  return /** @type {!proto.veidemann.api.contentwriter.v1.RecordType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.veidemann.api.contentwriter.v1.RecordType} value
 * @return {!proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta} returns this
 */
proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string record_content_type = 3;
 * @return {string}
 */
proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta.prototype.getRecordContentType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta} returns this
 */
proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta.prototype.setRecordContentType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string block_digest = 4;
 * @return {string}
 */
proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta.prototype.getBlockDigest = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta} returns this
 */
proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta.prototype.setBlockDigest = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string payload_digest = 5;
 * @return {string}
 */
proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta.prototype.getPayloadDigest = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta} returns this
 */
proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta.prototype.setPayloadDigest = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int64 size = 6;
 * @return {number}
 */
proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta} returns this
 */
proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta.prototype.setSize = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional veidemann.api.config.v1.Collection.SubCollectionType sub_collection = 7;
 * @return {!proto.veidemann.api.config.v1.Collection.SubCollectionType}
 */
proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta.prototype.getSubCollection = function() {
  return /** @type {!proto.veidemann.api.config.v1.Collection.SubCollectionType} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.veidemann.api.config.v1.Collection.SubCollectionType} value
 * @return {!proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta} returns this
 */
proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta.prototype.setSubCollection = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * repeated string warc_concurrent_to = 8;
 * @return {!Array<string>}
 */
proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta.prototype.getWarcConcurrentToList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta} returns this
 */
proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta.prototype.setWarcConcurrentToList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta} returns this
 */
proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta.prototype.addWarcConcurrentTo = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta} returns this
 */
proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta.prototype.clearWarcConcurrentToList = function() {
  return this.setWarcConcurrentToList([]);
};


/**
 * optional string execution_id = 1;
 * @return {string}
 */
proto.veidemann.api.contentwriter.v1.WriteRequestMeta.prototype.getExecutionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.veidemann.api.contentwriter.v1.WriteRequestMeta} returns this
 */
proto.veidemann.api.contentwriter.v1.WriteRequestMeta.prototype.setExecutionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string target_uri = 2;
 * @return {string}
 */
proto.veidemann.api.contentwriter.v1.WriteRequestMeta.prototype.getTargetUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.veidemann.api.contentwriter.v1.WriteRequestMeta} returns this
 */
proto.veidemann.api.contentwriter.v1.WriteRequestMeta.prototype.setTargetUri = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * map<int32, RecordMeta> record_meta = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,!proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta>}
 */
proto.veidemann.api.contentwriter.v1.WriteRequestMeta.prototype.getRecordMetaMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,!proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      proto.veidemann.api.contentwriter.v1.WriteRequestMeta.RecordMeta));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.veidemann.api.contentwriter.v1.WriteRequestMeta} returns this
 */
proto.veidemann.api.contentwriter.v1.WriteRequestMeta.prototype.clearRecordMetaMap = function() {
  this.getRecordMetaMap().clear();
  return this;
};


/**
 * optional google.protobuf.Timestamp fetch_time_stamp = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.veidemann.api.contentwriter.v1.WriteRequestMeta.prototype.getFetchTimeStamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.veidemann.api.contentwriter.v1.WriteRequestMeta} returns this
*/
proto.veidemann.api.contentwriter.v1.WriteRequestMeta.prototype.setFetchTimeStamp = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.veidemann.api.contentwriter.v1.WriteRequestMeta} returns this
 */
proto.veidemann.api.contentwriter.v1.WriteRequestMeta.prototype.clearFetchTimeStamp = function() {
  return this.setFetchTimeStamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.contentwriter.v1.WriteRequestMeta.prototype.hasFetchTimeStamp = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string ip_address = 5;
 * @return {string}
 */
proto.veidemann.api.contentwriter.v1.WriteRequestMeta.prototype.getIpAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.veidemann.api.contentwriter.v1.WriteRequestMeta} returns this
 */
proto.veidemann.api.contentwriter.v1.WriteRequestMeta.prototype.setIpAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional veidemann.api.config.v1.ConfigRef collection_ref = 7;
 * @return {?proto.veidemann.api.config.v1.ConfigRef}
 */
proto.veidemann.api.contentwriter.v1.WriteRequestMeta.prototype.getCollectionRef = function() {
  return /** @type{?proto.veidemann.api.config.v1.ConfigRef} */ (
    jspb.Message.getWrapperField(this, config_v1_resources_pb.ConfigRef, 7));
};


/**
 * @param {?proto.veidemann.api.config.v1.ConfigRef|undefined} value
 * @return {!proto.veidemann.api.contentwriter.v1.WriteRequestMeta} returns this
*/
proto.veidemann.api.contentwriter.v1.WriteRequestMeta.prototype.setCollectionRef = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.veidemann.api.contentwriter.v1.WriteRequestMeta} returns this
 */
proto.veidemann.api.contentwriter.v1.WriteRequestMeta.prototype.clearCollectionRef = function() {
  return this.setCollectionRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.contentwriter.v1.WriteRequestMeta.prototype.hasCollectionRef = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.veidemann.api.contentwriter.v1.WriteRequest.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.veidemann.api.contentwriter.v1.WriteRequest.ValueCase = {
  VALUE_NOT_SET: 0,
  META: 1,
  PROTOCOL_HEADER: 2,
  PAYLOAD: 3,
  CANCEL: 4
};

/**
 * @return {proto.veidemann.api.contentwriter.v1.WriteRequest.ValueCase}
 */
proto.veidemann.api.contentwriter.v1.WriteRequest.prototype.getValueCase = function() {
  return /** @type {proto.veidemann.api.contentwriter.v1.WriteRequest.ValueCase} */(jspb.Message.computeOneofCase(this, proto.veidemann.api.contentwriter.v1.WriteRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.contentwriter.v1.WriteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.contentwriter.v1.WriteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.contentwriter.v1.WriteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.contentwriter.v1.WriteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
meta: (f = msg.getMeta()) && proto.veidemann.api.contentwriter.v1.WriteRequestMeta.toObject(includeInstance, f),
protocolHeader: (f = msg.getProtocolHeader()) && proto.veidemann.api.contentwriter.v1.Data.toObject(includeInstance, f),
payload: (f = msg.getPayload()) && proto.veidemann.api.contentwriter.v1.Data.toObject(includeInstance, f),
cancel: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.contentwriter.v1.WriteRequest}
 */
proto.veidemann.api.contentwriter.v1.WriteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.contentwriter.v1.WriteRequest;
  return proto.veidemann.api.contentwriter.v1.WriteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.contentwriter.v1.WriteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.contentwriter.v1.WriteRequest}
 */
proto.veidemann.api.contentwriter.v1.WriteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.veidemann.api.contentwriter.v1.WriteRequestMeta;
      reader.readMessage(value,proto.veidemann.api.contentwriter.v1.WriteRequestMeta.deserializeBinaryFromReader);
      msg.setMeta(value);
      break;
    case 2:
      var value = new proto.veidemann.api.contentwriter.v1.Data;
      reader.readMessage(value,proto.veidemann.api.contentwriter.v1.Data.deserializeBinaryFromReader);
      msg.setProtocolHeader(value);
      break;
    case 3:
      var value = new proto.veidemann.api.contentwriter.v1.Data;
      reader.readMessage(value,proto.veidemann.api.contentwriter.v1.Data.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCancel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.contentwriter.v1.WriteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.contentwriter.v1.WriteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.contentwriter.v1.WriteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.contentwriter.v1.WriteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMeta();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.veidemann.api.contentwriter.v1.WriteRequestMeta.serializeBinaryToWriter
    );
  }
  f = message.getProtocolHeader();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.veidemann.api.contentwriter.v1.Data.serializeBinaryToWriter
    );
  }
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.veidemann.api.contentwriter.v1.Data.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional WriteRequestMeta meta = 1;
 * @return {?proto.veidemann.api.contentwriter.v1.WriteRequestMeta}
 */
proto.veidemann.api.contentwriter.v1.WriteRequest.prototype.getMeta = function() {
  return /** @type{?proto.veidemann.api.contentwriter.v1.WriteRequestMeta} */ (
    jspb.Message.getWrapperField(this, proto.veidemann.api.contentwriter.v1.WriteRequestMeta, 1));
};


/**
 * @param {?proto.veidemann.api.contentwriter.v1.WriteRequestMeta|undefined} value
 * @return {!proto.veidemann.api.contentwriter.v1.WriteRequest} returns this
*/
proto.veidemann.api.contentwriter.v1.WriteRequest.prototype.setMeta = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.veidemann.api.contentwriter.v1.WriteRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.veidemann.api.contentwriter.v1.WriteRequest} returns this
 */
proto.veidemann.api.contentwriter.v1.WriteRequest.prototype.clearMeta = function() {
  return this.setMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.contentwriter.v1.WriteRequest.prototype.hasMeta = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Data protocol_header = 2;
 * @return {?proto.veidemann.api.contentwriter.v1.Data}
 */
proto.veidemann.api.contentwriter.v1.WriteRequest.prototype.getProtocolHeader = function() {
  return /** @type{?proto.veidemann.api.contentwriter.v1.Data} */ (
    jspb.Message.getWrapperField(this, proto.veidemann.api.contentwriter.v1.Data, 2));
};


/**
 * @param {?proto.veidemann.api.contentwriter.v1.Data|undefined} value
 * @return {!proto.veidemann.api.contentwriter.v1.WriteRequest} returns this
*/
proto.veidemann.api.contentwriter.v1.WriteRequest.prototype.setProtocolHeader = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.veidemann.api.contentwriter.v1.WriteRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.veidemann.api.contentwriter.v1.WriteRequest} returns this
 */
proto.veidemann.api.contentwriter.v1.WriteRequest.prototype.clearProtocolHeader = function() {
  return this.setProtocolHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.contentwriter.v1.WriteRequest.prototype.hasProtocolHeader = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Data payload = 3;
 * @return {?proto.veidemann.api.contentwriter.v1.Data}
 */
proto.veidemann.api.contentwriter.v1.WriteRequest.prototype.getPayload = function() {
  return /** @type{?proto.veidemann.api.contentwriter.v1.Data} */ (
    jspb.Message.getWrapperField(this, proto.veidemann.api.contentwriter.v1.Data, 3));
};


/**
 * @param {?proto.veidemann.api.contentwriter.v1.Data|undefined} value
 * @return {!proto.veidemann.api.contentwriter.v1.WriteRequest} returns this
*/
proto.veidemann.api.contentwriter.v1.WriteRequest.prototype.setPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.veidemann.api.contentwriter.v1.WriteRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.veidemann.api.contentwriter.v1.WriteRequest} returns this
 */
proto.veidemann.api.contentwriter.v1.WriteRequest.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.contentwriter.v1.WriteRequest.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string cancel = 4;
 * @return {string}
 */
proto.veidemann.api.contentwriter.v1.WriteRequest.prototype.getCancel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.veidemann.api.contentwriter.v1.WriteRequest} returns this
 */
proto.veidemann.api.contentwriter.v1.WriteRequest.prototype.setCancel = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.veidemann.api.contentwriter.v1.WriteRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.veidemann.api.contentwriter.v1.WriteRequest} returns this
 */
proto.veidemann.api.contentwriter.v1.WriteRequest.prototype.clearCancel = function() {
  return jspb.Message.setOneofField(this, 4, proto.veidemann.api.contentwriter.v1.WriteRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.contentwriter.v1.WriteRequest.prototype.hasCancel = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.contentwriter.v1.WriteResponseMeta.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.contentwriter.v1.WriteResponseMeta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.contentwriter.v1.WriteResponseMeta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.contentwriter.v1.WriteResponseMeta.toObject = function(includeInstance, msg) {
  var f, obj = {
recordMetaMap: (f = msg.getRecordMetaMap()) ? f.toObject(includeInstance, proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.contentwriter.v1.WriteResponseMeta}
 */
proto.veidemann.api.contentwriter.v1.WriteResponseMeta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.contentwriter.v1.WriteResponseMeta;
  return proto.veidemann.api.contentwriter.v1.WriteResponseMeta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.contentwriter.v1.WriteResponseMeta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.contentwriter.v1.WriteResponseMeta}
 */
proto.veidemann.api.contentwriter.v1.WriteResponseMeta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getRecordMetaMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readMessage, proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta.deserializeBinaryFromReader, 0, new proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.contentwriter.v1.WriteResponseMeta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.contentwriter.v1.WriteResponseMeta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.contentwriter.v1.WriteResponseMeta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.contentwriter.v1.WriteResponseMeta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecordMetaMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeMessage, proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta.serializeBinaryToWriter);
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta.toObject = function(includeInstance, msg) {
  var f, obj = {
recordNum: jspb.Message.getFieldWithDefault(msg, 1, 0),
type: jspb.Message.getFieldWithDefault(msg, 2, 0),
warcId: jspb.Message.getFieldWithDefault(msg, 3, ""),
storageRef: jspb.Message.getFieldWithDefault(msg, 4, ""),
blockDigest: jspb.Message.getFieldWithDefault(msg, 5, ""),
payloadDigest: jspb.Message.getFieldWithDefault(msg, 6, ""),
revisitReferenceId: jspb.Message.getFieldWithDefault(msg, 7, ""),
collectionFinalName: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta}
 */
proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta;
  return proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta}
 */
proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRecordNum(value);
      break;
    case 2:
      var value = /** @type {!proto.veidemann.api.contentwriter.v1.RecordType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarcId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setStorageRef(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBlockDigest(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayloadDigest(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setRevisitReferenceId(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollectionFinalName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecordNum();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getWarcId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStorageRef();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBlockDigest();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPayloadDigest();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getRevisitReferenceId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCollectionFinalName();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional int32 record_num = 1;
 * @return {number}
 */
proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta.prototype.getRecordNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta} returns this
 */
proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta.prototype.setRecordNum = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional RecordType type = 2;
 * @return {!proto.veidemann.api.contentwriter.v1.RecordType}
 */
proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta.prototype.getType = function() {
  return /** @type {!proto.veidemann.api.contentwriter.v1.RecordType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.veidemann.api.contentwriter.v1.RecordType} value
 * @return {!proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta} returns this
 */
proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string warc_id = 3;
 * @return {string}
 */
proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta.prototype.getWarcId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta} returns this
 */
proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta.prototype.setWarcId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string storage_ref = 4;
 * @return {string}
 */
proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta.prototype.getStorageRef = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta} returns this
 */
proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta.prototype.setStorageRef = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string block_digest = 5;
 * @return {string}
 */
proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta.prototype.getBlockDigest = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta} returns this
 */
proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta.prototype.setBlockDigest = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string payload_digest = 6;
 * @return {string}
 */
proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta.prototype.getPayloadDigest = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta} returns this
 */
proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta.prototype.setPayloadDigest = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string revisit_reference_id = 7;
 * @return {string}
 */
proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta.prototype.getRevisitReferenceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta} returns this
 */
proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta.prototype.setRevisitReferenceId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string collection_final_name = 8;
 * @return {string}
 */
proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta.prototype.getCollectionFinalName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta} returns this
 */
proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta.prototype.setCollectionFinalName = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * map<int32, RecordMeta> record_meta = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,!proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta>}
 */
proto.veidemann.api.contentwriter.v1.WriteResponseMeta.prototype.getRecordMetaMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,!proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.veidemann.api.contentwriter.v1.WriteResponseMeta.RecordMeta));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.veidemann.api.contentwriter.v1.WriteResponseMeta} returns this
 */
proto.veidemann.api.contentwriter.v1.WriteResponseMeta.prototype.clearRecordMetaMap = function() {
  this.getRecordMetaMap().clear();
  return this;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.contentwriter.v1.WriteReply.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.contentwriter.v1.WriteReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.contentwriter.v1.WriteReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.contentwriter.v1.WriteReply.toObject = function(includeInstance, msg) {
  var f, obj = {
meta: (f = msg.getMeta()) && proto.veidemann.api.contentwriter.v1.WriteResponseMeta.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.contentwriter.v1.WriteReply}
 */
proto.veidemann.api.contentwriter.v1.WriteReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.contentwriter.v1.WriteReply;
  return proto.veidemann.api.contentwriter.v1.WriteReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.contentwriter.v1.WriteReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.contentwriter.v1.WriteReply}
 */
proto.veidemann.api.contentwriter.v1.WriteReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.veidemann.api.contentwriter.v1.WriteResponseMeta;
      reader.readMessage(value,proto.veidemann.api.contentwriter.v1.WriteResponseMeta.deserializeBinaryFromReader);
      msg.setMeta(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.contentwriter.v1.WriteReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.contentwriter.v1.WriteReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.contentwriter.v1.WriteReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.contentwriter.v1.WriteReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMeta();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.veidemann.api.contentwriter.v1.WriteResponseMeta.serializeBinaryToWriter
    );
  }
};


/**
 * optional WriteResponseMeta meta = 1;
 * @return {?proto.veidemann.api.contentwriter.v1.WriteResponseMeta}
 */
proto.veidemann.api.contentwriter.v1.WriteReply.prototype.getMeta = function() {
  return /** @type{?proto.veidemann.api.contentwriter.v1.WriteResponseMeta} */ (
    jspb.Message.getWrapperField(this, proto.veidemann.api.contentwriter.v1.WriteResponseMeta, 1));
};


/**
 * @param {?proto.veidemann.api.contentwriter.v1.WriteResponseMeta|undefined} value
 * @return {!proto.veidemann.api.contentwriter.v1.WriteReply} returns this
*/
proto.veidemann.api.contentwriter.v1.WriteReply.prototype.setMeta = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.veidemann.api.contentwriter.v1.WriteReply} returns this
 */
proto.veidemann.api.contentwriter.v1.WriteReply.prototype.clearMeta = function() {
  return this.setMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.contentwriter.v1.WriteReply.prototype.hasMeta = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.veidemann.api.contentwriter.v1);
