// source: browsercontroller/v1/browsercontroller.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var config_v1_resources_pb = require('../../config/v1/resources_pb.js');
goog.object.extend(proto, config_v1_resources_pb);
var log_v1_resources_pb = require('../../log/v1/resources_pb.js');
goog.object.extend(proto, log_v1_resources_pb);
goog.exportSymbol('proto.veidemann.api.browsercontroller.v1.Completed', null, global);
goog.exportSymbol('proto.veidemann.api.browsercontroller.v1.DoReply', null, global);
goog.exportSymbol('proto.veidemann.api.browsercontroller.v1.DoReply.ActionCase', null, global);
goog.exportSymbol('proto.veidemann.api.browsercontroller.v1.DoRequest', null, global);
goog.exportSymbol('proto.veidemann.api.browsercontroller.v1.DoRequest.ActionCase', null, global);
goog.exportSymbol('proto.veidemann.api.browsercontroller.v1.NewReply', null, global);
goog.exportSymbol('proto.veidemann.api.browsercontroller.v1.NotifyActivity', null, global);
goog.exportSymbol('proto.veidemann.api.browsercontroller.v1.NotifyActivity.Activity', null, global);
goog.exportSymbol('proto.veidemann.api.browsercontroller.v1.RegisterNew', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.browsercontroller.v1.RegisterNew = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.veidemann.api.browsercontroller.v1.RegisterNew, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.browsercontroller.v1.RegisterNew.displayName = 'proto.veidemann.api.browsercontroller.v1.RegisterNew';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.browsercontroller.v1.NotifyActivity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.veidemann.api.browsercontroller.v1.NotifyActivity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.browsercontroller.v1.NotifyActivity.displayName = 'proto.veidemann.api.browsercontroller.v1.NotifyActivity';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.browsercontroller.v1.Completed = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.veidemann.api.browsercontroller.v1.Completed, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.browsercontroller.v1.Completed.displayName = 'proto.veidemann.api.browsercontroller.v1.Completed';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.browsercontroller.v1.DoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.veidemann.api.browsercontroller.v1.DoRequest.oneofGroups_);
};
goog.inherits(proto.veidemann.api.browsercontroller.v1.DoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.browsercontroller.v1.DoRequest.displayName = 'proto.veidemann.api.browsercontroller.v1.DoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.browsercontroller.v1.NewReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.veidemann.api.browsercontroller.v1.NewReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.browsercontroller.v1.NewReply.displayName = 'proto.veidemann.api.browsercontroller.v1.NewReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.browsercontroller.v1.DoReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.veidemann.api.browsercontroller.v1.DoReply.oneofGroups_);
};
goog.inherits(proto.veidemann.api.browsercontroller.v1.DoReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.browsercontroller.v1.DoReply.displayName = 'proto.veidemann.api.browsercontroller.v1.DoReply';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.browsercontroller.v1.RegisterNew.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.browsercontroller.v1.RegisterNew.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.browsercontroller.v1.RegisterNew} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.browsercontroller.v1.RegisterNew.toObject = function(includeInstance, msg) {
  var f, obj = {
proxyId: jspb.Message.getFieldWithDefault(msg, 1, 0),
uri: jspb.Message.getFieldWithDefault(msg, 2, ""),
crawlExecutionId: jspb.Message.getFieldWithDefault(msg, 3, ""),
jobExecutionId: jspb.Message.getFieldWithDefault(msg, 4, ""),
collectionRef: (f = msg.getCollectionRef()) && config_v1_resources_pb.ConfigRef.toObject(includeInstance, f),
method: jspb.Message.getFieldWithDefault(msg, 6, ""),
requestId: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.browsercontroller.v1.RegisterNew}
 */
proto.veidemann.api.browsercontroller.v1.RegisterNew.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.browsercontroller.v1.RegisterNew;
  return proto.veidemann.api.browsercontroller.v1.RegisterNew.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.browsercontroller.v1.RegisterNew} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.browsercontroller.v1.RegisterNew}
 */
proto.veidemann.api.browsercontroller.v1.RegisterNew.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setProxyId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUri(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCrawlExecutionId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setJobExecutionId(value);
      break;
    case 5:
      var value = new config_v1_resources_pb.ConfigRef;
      reader.readMessage(value,config_v1_resources_pb.ConfigRef.deserializeBinaryFromReader);
      msg.setCollectionRef(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setMethod(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.browsercontroller.v1.RegisterNew.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.browsercontroller.v1.RegisterNew.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.browsercontroller.v1.RegisterNew} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.browsercontroller.v1.RegisterNew.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProxyId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUri();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCrawlExecutionId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getJobExecutionId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCollectionRef();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      config_v1_resources_pb.ConfigRef.serializeBinaryToWriter
    );
  }
  f = message.getMethod();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional int32 proxy_id = 1;
 * @return {number}
 */
proto.veidemann.api.browsercontroller.v1.RegisterNew.prototype.getProxyId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.veidemann.api.browsercontroller.v1.RegisterNew} returns this
 */
proto.veidemann.api.browsercontroller.v1.RegisterNew.prototype.setProxyId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uri = 2;
 * @return {string}
 */
proto.veidemann.api.browsercontroller.v1.RegisterNew.prototype.getUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.veidemann.api.browsercontroller.v1.RegisterNew} returns this
 */
proto.veidemann.api.browsercontroller.v1.RegisterNew.prototype.setUri = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string crawl_execution_id = 3;
 * @return {string}
 */
proto.veidemann.api.browsercontroller.v1.RegisterNew.prototype.getCrawlExecutionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.veidemann.api.browsercontroller.v1.RegisterNew} returns this
 */
proto.veidemann.api.browsercontroller.v1.RegisterNew.prototype.setCrawlExecutionId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string job_execution_id = 4;
 * @return {string}
 */
proto.veidemann.api.browsercontroller.v1.RegisterNew.prototype.getJobExecutionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.veidemann.api.browsercontroller.v1.RegisterNew} returns this
 */
proto.veidemann.api.browsercontroller.v1.RegisterNew.prototype.setJobExecutionId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional veidemann.api.config.v1.ConfigRef collection_ref = 5;
 * @return {?proto.veidemann.api.config.v1.ConfigRef}
 */
proto.veidemann.api.browsercontroller.v1.RegisterNew.prototype.getCollectionRef = function() {
  return /** @type{?proto.veidemann.api.config.v1.ConfigRef} */ (
    jspb.Message.getWrapperField(this, config_v1_resources_pb.ConfigRef, 5));
};


/**
 * @param {?proto.veidemann.api.config.v1.ConfigRef|undefined} value
 * @return {!proto.veidemann.api.browsercontroller.v1.RegisterNew} returns this
*/
proto.veidemann.api.browsercontroller.v1.RegisterNew.prototype.setCollectionRef = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.veidemann.api.browsercontroller.v1.RegisterNew} returns this
 */
proto.veidemann.api.browsercontroller.v1.RegisterNew.prototype.clearCollectionRef = function() {
  return this.setCollectionRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.browsercontroller.v1.RegisterNew.prototype.hasCollectionRef = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string method = 6;
 * @return {string}
 */
proto.veidemann.api.browsercontroller.v1.RegisterNew.prototype.getMethod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.veidemann.api.browsercontroller.v1.RegisterNew} returns this
 */
proto.veidemann.api.browsercontroller.v1.RegisterNew.prototype.setMethod = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string request_id = 7;
 * @return {string}
 */
proto.veidemann.api.browsercontroller.v1.RegisterNew.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.veidemann.api.browsercontroller.v1.RegisterNew} returns this
 */
proto.veidemann.api.browsercontroller.v1.RegisterNew.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.browsercontroller.v1.NotifyActivity.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.browsercontroller.v1.NotifyActivity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.browsercontroller.v1.NotifyActivity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.browsercontroller.v1.NotifyActivity.toObject = function(includeInstance, msg) {
  var f, obj = {
activity: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.browsercontroller.v1.NotifyActivity}
 */
proto.veidemann.api.browsercontroller.v1.NotifyActivity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.browsercontroller.v1.NotifyActivity;
  return proto.veidemann.api.browsercontroller.v1.NotifyActivity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.browsercontroller.v1.NotifyActivity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.browsercontroller.v1.NotifyActivity}
 */
proto.veidemann.api.browsercontroller.v1.NotifyActivity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.veidemann.api.browsercontroller.v1.NotifyActivity.Activity} */ (reader.readEnum());
      msg.setActivity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.browsercontroller.v1.NotifyActivity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.browsercontroller.v1.NotifyActivity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.browsercontroller.v1.NotifyActivity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.browsercontroller.v1.NotifyActivity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActivity();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.veidemann.api.browsercontroller.v1.NotifyActivity.Activity = {
  DATA_RECEIVED: 0,
  ALL_DATA_RECEIVED: 1
};

/**
 * optional Activity activity = 1;
 * @return {!proto.veidemann.api.browsercontroller.v1.NotifyActivity.Activity}
 */
proto.veidemann.api.browsercontroller.v1.NotifyActivity.prototype.getActivity = function() {
  return /** @type {!proto.veidemann.api.browsercontroller.v1.NotifyActivity.Activity} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.veidemann.api.browsercontroller.v1.NotifyActivity.Activity} value
 * @return {!proto.veidemann.api.browsercontroller.v1.NotifyActivity} returns this
 */
proto.veidemann.api.browsercontroller.v1.NotifyActivity.prototype.setActivity = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.browsercontroller.v1.Completed.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.browsercontroller.v1.Completed.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.browsercontroller.v1.Completed} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.browsercontroller.v1.Completed.toObject = function(includeInstance, msg) {
  var f, obj = {
crawlLog: (f = msg.getCrawlLog()) && log_v1_resources_pb.CrawlLog.toObject(includeInstance, f),
cached: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.browsercontroller.v1.Completed}
 */
proto.veidemann.api.browsercontroller.v1.Completed.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.browsercontroller.v1.Completed;
  return proto.veidemann.api.browsercontroller.v1.Completed.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.browsercontroller.v1.Completed} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.browsercontroller.v1.Completed}
 */
proto.veidemann.api.browsercontroller.v1.Completed.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new log_v1_resources_pb.CrawlLog;
      reader.readMessage(value,log_v1_resources_pb.CrawlLog.deserializeBinaryFromReader);
      msg.setCrawlLog(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCached(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.browsercontroller.v1.Completed.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.browsercontroller.v1.Completed.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.browsercontroller.v1.Completed} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.browsercontroller.v1.Completed.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCrawlLog();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      log_v1_resources_pb.CrawlLog.serializeBinaryToWriter
    );
  }
  f = message.getCached();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional veidemann.api.log.v1.CrawlLog crawl_log = 1;
 * @return {?proto.veidemann.api.log.v1.CrawlLog}
 */
proto.veidemann.api.browsercontroller.v1.Completed.prototype.getCrawlLog = function() {
  return /** @type{?proto.veidemann.api.log.v1.CrawlLog} */ (
    jspb.Message.getWrapperField(this, log_v1_resources_pb.CrawlLog, 1));
};


/**
 * @param {?proto.veidemann.api.log.v1.CrawlLog|undefined} value
 * @return {!proto.veidemann.api.browsercontroller.v1.Completed} returns this
*/
proto.veidemann.api.browsercontroller.v1.Completed.prototype.setCrawlLog = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.veidemann.api.browsercontroller.v1.Completed} returns this
 */
proto.veidemann.api.browsercontroller.v1.Completed.prototype.clearCrawlLog = function() {
  return this.setCrawlLog(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.browsercontroller.v1.Completed.prototype.hasCrawlLog = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool cached = 2;
 * @return {boolean}
 */
proto.veidemann.api.browsercontroller.v1.Completed.prototype.getCached = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.veidemann.api.browsercontroller.v1.Completed} returns this
 */
proto.veidemann.api.browsercontroller.v1.Completed.prototype.setCached = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.veidemann.api.browsercontroller.v1.DoRequest.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.veidemann.api.browsercontroller.v1.DoRequest.ActionCase = {
  ACTION_NOT_SET: 0,
  NEW: 1,
  NOTIFY: 2,
  COMPLETED: 3
};

/**
 * @return {proto.veidemann.api.browsercontroller.v1.DoRequest.ActionCase}
 */
proto.veidemann.api.browsercontroller.v1.DoRequest.prototype.getActionCase = function() {
  return /** @type {proto.veidemann.api.browsercontroller.v1.DoRequest.ActionCase} */(jspb.Message.computeOneofCase(this, proto.veidemann.api.browsercontroller.v1.DoRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.browsercontroller.v1.DoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.browsercontroller.v1.DoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.browsercontroller.v1.DoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.browsercontroller.v1.DoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
pb_new: (f = msg.getNew()) && proto.veidemann.api.browsercontroller.v1.RegisterNew.toObject(includeInstance, f),
notify: (f = msg.getNotify()) && proto.veidemann.api.browsercontroller.v1.NotifyActivity.toObject(includeInstance, f),
completed: (f = msg.getCompleted()) && proto.veidemann.api.browsercontroller.v1.Completed.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.browsercontroller.v1.DoRequest}
 */
proto.veidemann.api.browsercontroller.v1.DoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.browsercontroller.v1.DoRequest;
  return proto.veidemann.api.browsercontroller.v1.DoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.browsercontroller.v1.DoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.browsercontroller.v1.DoRequest}
 */
proto.veidemann.api.browsercontroller.v1.DoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.veidemann.api.browsercontroller.v1.RegisterNew;
      reader.readMessage(value,proto.veidemann.api.browsercontroller.v1.RegisterNew.deserializeBinaryFromReader);
      msg.setNew(value);
      break;
    case 2:
      var value = new proto.veidemann.api.browsercontroller.v1.NotifyActivity;
      reader.readMessage(value,proto.veidemann.api.browsercontroller.v1.NotifyActivity.deserializeBinaryFromReader);
      msg.setNotify(value);
      break;
    case 3:
      var value = new proto.veidemann.api.browsercontroller.v1.Completed;
      reader.readMessage(value,proto.veidemann.api.browsercontroller.v1.Completed.deserializeBinaryFromReader);
      msg.setCompleted(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.browsercontroller.v1.DoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.browsercontroller.v1.DoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.browsercontroller.v1.DoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.browsercontroller.v1.DoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNew();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.veidemann.api.browsercontroller.v1.RegisterNew.serializeBinaryToWriter
    );
  }
  f = message.getNotify();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.veidemann.api.browsercontroller.v1.NotifyActivity.serializeBinaryToWriter
    );
  }
  f = message.getCompleted();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.veidemann.api.browsercontroller.v1.Completed.serializeBinaryToWriter
    );
  }
};


/**
 * optional RegisterNew new = 1;
 * @return {?proto.veidemann.api.browsercontroller.v1.RegisterNew}
 */
proto.veidemann.api.browsercontroller.v1.DoRequest.prototype.getNew = function() {
  return /** @type{?proto.veidemann.api.browsercontroller.v1.RegisterNew} */ (
    jspb.Message.getWrapperField(this, proto.veidemann.api.browsercontroller.v1.RegisterNew, 1));
};


/**
 * @param {?proto.veidemann.api.browsercontroller.v1.RegisterNew|undefined} value
 * @return {!proto.veidemann.api.browsercontroller.v1.DoRequest} returns this
*/
proto.veidemann.api.browsercontroller.v1.DoRequest.prototype.setNew = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.veidemann.api.browsercontroller.v1.DoRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.veidemann.api.browsercontroller.v1.DoRequest} returns this
 */
proto.veidemann.api.browsercontroller.v1.DoRequest.prototype.clearNew = function() {
  return this.setNew(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.browsercontroller.v1.DoRequest.prototype.hasNew = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional NotifyActivity notify = 2;
 * @return {?proto.veidemann.api.browsercontroller.v1.NotifyActivity}
 */
proto.veidemann.api.browsercontroller.v1.DoRequest.prototype.getNotify = function() {
  return /** @type{?proto.veidemann.api.browsercontroller.v1.NotifyActivity} */ (
    jspb.Message.getWrapperField(this, proto.veidemann.api.browsercontroller.v1.NotifyActivity, 2));
};


/**
 * @param {?proto.veidemann.api.browsercontroller.v1.NotifyActivity|undefined} value
 * @return {!proto.veidemann.api.browsercontroller.v1.DoRequest} returns this
*/
proto.veidemann.api.browsercontroller.v1.DoRequest.prototype.setNotify = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.veidemann.api.browsercontroller.v1.DoRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.veidemann.api.browsercontroller.v1.DoRequest} returns this
 */
proto.veidemann.api.browsercontroller.v1.DoRequest.prototype.clearNotify = function() {
  return this.setNotify(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.browsercontroller.v1.DoRequest.prototype.hasNotify = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Completed completed = 3;
 * @return {?proto.veidemann.api.browsercontroller.v1.Completed}
 */
proto.veidemann.api.browsercontroller.v1.DoRequest.prototype.getCompleted = function() {
  return /** @type{?proto.veidemann.api.browsercontroller.v1.Completed} */ (
    jspb.Message.getWrapperField(this, proto.veidemann.api.browsercontroller.v1.Completed, 3));
};


/**
 * @param {?proto.veidemann.api.browsercontroller.v1.Completed|undefined} value
 * @return {!proto.veidemann.api.browsercontroller.v1.DoRequest} returns this
*/
proto.veidemann.api.browsercontroller.v1.DoRequest.prototype.setCompleted = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.veidemann.api.browsercontroller.v1.DoRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.veidemann.api.browsercontroller.v1.DoRequest} returns this
 */
proto.veidemann.api.browsercontroller.v1.DoRequest.prototype.clearCompleted = function() {
  return this.setCompleted(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.browsercontroller.v1.DoRequest.prototype.hasCompleted = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.browsercontroller.v1.NewReply.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.browsercontroller.v1.NewReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.browsercontroller.v1.NewReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.browsercontroller.v1.NewReply.toObject = function(includeInstance, msg) {
  var f, obj = {
crawlExecutionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
jobExecutionId: jspb.Message.getFieldWithDefault(msg, 2, ""),
collectionRef: (f = msg.getCollectionRef()) && config_v1_resources_pb.ConfigRef.toObject(includeInstance, f),
replacementScript: (f = msg.getReplacementScript()) && config_v1_resources_pb.BrowserScript.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.browsercontroller.v1.NewReply}
 */
proto.veidemann.api.browsercontroller.v1.NewReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.browsercontroller.v1.NewReply;
  return proto.veidemann.api.browsercontroller.v1.NewReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.browsercontroller.v1.NewReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.browsercontroller.v1.NewReply}
 */
proto.veidemann.api.browsercontroller.v1.NewReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCrawlExecutionId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setJobExecutionId(value);
      break;
    case 4:
      var value = new config_v1_resources_pb.ConfigRef;
      reader.readMessage(value,config_v1_resources_pb.ConfigRef.deserializeBinaryFromReader);
      msg.setCollectionRef(value);
      break;
    case 5:
      var value = new config_v1_resources_pb.BrowserScript;
      reader.readMessage(value,config_v1_resources_pb.BrowserScript.deserializeBinaryFromReader);
      msg.setReplacementScript(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.browsercontroller.v1.NewReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.browsercontroller.v1.NewReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.browsercontroller.v1.NewReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.browsercontroller.v1.NewReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCrawlExecutionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getJobExecutionId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCollectionRef();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      config_v1_resources_pb.ConfigRef.serializeBinaryToWriter
    );
  }
  f = message.getReplacementScript();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      config_v1_resources_pb.BrowserScript.serializeBinaryToWriter
    );
  }
};


/**
 * optional string crawl_execution_id = 1;
 * @return {string}
 */
proto.veidemann.api.browsercontroller.v1.NewReply.prototype.getCrawlExecutionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.veidemann.api.browsercontroller.v1.NewReply} returns this
 */
proto.veidemann.api.browsercontroller.v1.NewReply.prototype.setCrawlExecutionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string job_execution_id = 2;
 * @return {string}
 */
proto.veidemann.api.browsercontroller.v1.NewReply.prototype.getJobExecutionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.veidemann.api.browsercontroller.v1.NewReply} returns this
 */
proto.veidemann.api.browsercontroller.v1.NewReply.prototype.setJobExecutionId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional veidemann.api.config.v1.ConfigRef collection_ref = 4;
 * @return {?proto.veidemann.api.config.v1.ConfigRef}
 */
proto.veidemann.api.browsercontroller.v1.NewReply.prototype.getCollectionRef = function() {
  return /** @type{?proto.veidemann.api.config.v1.ConfigRef} */ (
    jspb.Message.getWrapperField(this, config_v1_resources_pb.ConfigRef, 4));
};


/**
 * @param {?proto.veidemann.api.config.v1.ConfigRef|undefined} value
 * @return {!proto.veidemann.api.browsercontroller.v1.NewReply} returns this
*/
proto.veidemann.api.browsercontroller.v1.NewReply.prototype.setCollectionRef = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.veidemann.api.browsercontroller.v1.NewReply} returns this
 */
proto.veidemann.api.browsercontroller.v1.NewReply.prototype.clearCollectionRef = function() {
  return this.setCollectionRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.browsercontroller.v1.NewReply.prototype.hasCollectionRef = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional veidemann.api.config.v1.BrowserScript replacement_script = 5;
 * @return {?proto.veidemann.api.config.v1.BrowserScript}
 */
proto.veidemann.api.browsercontroller.v1.NewReply.prototype.getReplacementScript = function() {
  return /** @type{?proto.veidemann.api.config.v1.BrowserScript} */ (
    jspb.Message.getWrapperField(this, config_v1_resources_pb.BrowserScript, 5));
};


/**
 * @param {?proto.veidemann.api.config.v1.BrowserScript|undefined} value
 * @return {!proto.veidemann.api.browsercontroller.v1.NewReply} returns this
*/
proto.veidemann.api.browsercontroller.v1.NewReply.prototype.setReplacementScript = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.veidemann.api.browsercontroller.v1.NewReply} returns this
 */
proto.veidemann.api.browsercontroller.v1.NewReply.prototype.clearReplacementScript = function() {
  return this.setReplacementScript(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.browsercontroller.v1.NewReply.prototype.hasReplacementScript = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.veidemann.api.browsercontroller.v1.DoReply.oneofGroups_ = [[1,4]];

/**
 * @enum {number}
 */
proto.veidemann.api.browsercontroller.v1.DoReply.ActionCase = {
  ACTION_NOT_SET: 0,
  NEW: 1,
  CANCEL: 4
};

/**
 * @return {proto.veidemann.api.browsercontroller.v1.DoReply.ActionCase}
 */
proto.veidemann.api.browsercontroller.v1.DoReply.prototype.getActionCase = function() {
  return /** @type {proto.veidemann.api.browsercontroller.v1.DoReply.ActionCase} */(jspb.Message.computeOneofCase(this, proto.veidemann.api.browsercontroller.v1.DoReply.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.browsercontroller.v1.DoReply.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.browsercontroller.v1.DoReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.browsercontroller.v1.DoReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.browsercontroller.v1.DoReply.toObject = function(includeInstance, msg) {
  var f, obj = {
pb_new: (f = msg.getNew()) && proto.veidemann.api.browsercontroller.v1.NewReply.toObject(includeInstance, f),
cancel: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.browsercontroller.v1.DoReply}
 */
proto.veidemann.api.browsercontroller.v1.DoReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.browsercontroller.v1.DoReply;
  return proto.veidemann.api.browsercontroller.v1.DoReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.browsercontroller.v1.DoReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.browsercontroller.v1.DoReply}
 */
proto.veidemann.api.browsercontroller.v1.DoReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.veidemann.api.browsercontroller.v1.NewReply;
      reader.readMessage(value,proto.veidemann.api.browsercontroller.v1.NewReply.deserializeBinaryFromReader);
      msg.setNew(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCancel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.browsercontroller.v1.DoReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.browsercontroller.v1.DoReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.browsercontroller.v1.DoReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.browsercontroller.v1.DoReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNew();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.veidemann.api.browsercontroller.v1.NewReply.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional NewReply new = 1;
 * @return {?proto.veidemann.api.browsercontroller.v1.NewReply}
 */
proto.veidemann.api.browsercontroller.v1.DoReply.prototype.getNew = function() {
  return /** @type{?proto.veidemann.api.browsercontroller.v1.NewReply} */ (
    jspb.Message.getWrapperField(this, proto.veidemann.api.browsercontroller.v1.NewReply, 1));
};


/**
 * @param {?proto.veidemann.api.browsercontroller.v1.NewReply|undefined} value
 * @return {!proto.veidemann.api.browsercontroller.v1.DoReply} returns this
*/
proto.veidemann.api.browsercontroller.v1.DoReply.prototype.setNew = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.veidemann.api.browsercontroller.v1.DoReply.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.veidemann.api.browsercontroller.v1.DoReply} returns this
 */
proto.veidemann.api.browsercontroller.v1.DoReply.prototype.clearNew = function() {
  return this.setNew(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.browsercontroller.v1.DoReply.prototype.hasNew = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string cancel = 4;
 * @return {string}
 */
proto.veidemann.api.browsercontroller.v1.DoReply.prototype.getCancel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.veidemann.api.browsercontroller.v1.DoReply} returns this
 */
proto.veidemann.api.browsercontroller.v1.DoReply.prototype.setCancel = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.veidemann.api.browsercontroller.v1.DoReply.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.veidemann.api.browsercontroller.v1.DoReply} returns this
 */
proto.veidemann.api.browsercontroller.v1.DoReply.prototype.clearCancel = function() {
  return jspb.Message.setOneofField(this, 4, proto.veidemann.api.browsercontroller.v1.DoReply.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.browsercontroller.v1.DoReply.prototype.hasCancel = function() {
  return jspb.Message.getField(this, 4) != null;
};


goog.object.extend(exports, proto.veidemann.api.browsercontroller.v1);
